<UserControl x:Class="Kinectitude.Editor.Views.Scenes.SceneEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:m="clr-namespace:Kinectitude.Editor.Models"
             xmlns:Utils="clr-namespace:Kinectitude.Editor.Views.Utils"
             xmlns:Presenters="clr-namespace:Kinectitude.Editor.Views.Scenes.Presenters"
             xmlns:Designer="clr-namespace:Kinectitude.Editor.Views.Controls.Designer"
             mc:Ignorable="d"
             x:Name="self">

    <UserControl.Resources>

        <Utils:EntityConverter x:Key="EntityConverter" />
        <Utils:PlacementModeConverter x:Key="PlacementModeConverter" />
        
        <DataTemplate DataType="{x:Type Presenters:EntityPresenter}">
            <ContentControl Content="{Binding Visual}" Opacity="{Binding Opacity}">
                <ContentControl.ContextMenu>
                    <ContextMenu DataContext="{Binding Entity}">
                        <MenuItem Header="Rename..." Command="{Binding Entity.RenameCommand}" />
                        <MenuItem Header="Delete" Command="{Binding ElementName=self, Path=DataContext.RemoveEntityCommand, Mode=OneWay}" CommandParameter="{Binding}" />
                        <Separator />
                        <MenuItem Header="Properties..." Command="{Binding Entity.PropertiesCommand}" />
                    </ContextMenu>
                </ContentControl.ContextMenu>
            </ContentControl>
        </DataTemplate>

        <DataTemplate DataType="{x:Type Presenters:EntityVisual}">
            <Grid>
                <Rectangle Opacity="0.7" Fill="Black" Width="48" Height="48" />
                <Line Stroke="White" X1="0" Y1="0" X2="48" Y2="48" />
                <Line Stroke="White" X1="48" Y1="0" X2="0" Y2="48" />
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type Presenters:ShapeEntityVisual}">
            <Grid>
                <Rectangle Visibility="{Binding IsRectangular, Converter={StaticResource BoolToVis}}"
                           Width="{Binding Presenter.Width}"
                           Height="{Binding Presenter.Height}"
                           Fill="{Binding FillColor}"
                           Stroke="{Binding LineColor}"
                           StrokeThickness="{Binding LineThickness}" />
                <Ellipse Visibility="{Binding IsElliptical, Converter={StaticResource BoolToVis}}"
                         Width="{Binding Presenter.Width}"
                         Height="{Binding Presenter.Height}"
                         Fill="{Binding FillColor}"
                         Stroke="{Binding LineColor}"
                         StrokeThickness="{Binding LineThickness}" />
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type Presenters:SpriteEntityVisual}">
            <Grid>
                <Image Name="Image" 
                       Source="{Binding Image}"
                       Width="{Binding Presenter.Width}"
                       Height="{Binding Presenter.Height}"
                       Stretch="{Binding Stretched, Mode=OneWay}" />
            </Grid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type Presenters:TextEntityVisual}">
            <TextBlock Text="{Binding Value}"
                       FontFamily="{Binding FontFamily}"
                       FontWeight="{Binding FontWeight}"
                       FontStyle="{Binding FontStyle}"
                       FontStretch="{Binding FontStretch}"
                       FontSize="{Binding FontSize}"
                       Foreground="{Binding FontColor}">
                <TextBlock.RenderTransform>
                    <TranslateTransform X="{Binding OffsetX}" />
                </TextBlock.RenderTransform>
            </TextBlock>
        </DataTemplate>
        
    </UserControl.Resources>

    <DockPanel>

        <StackPanel DockPanel.Dock="Left" Margin="0,0,4,0" Orientation="Vertical">
            <StackPanel.Resources>
                <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="RadioButton">
                    <Setter Property="Padding" Value="8" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>
            <RadioButton IsChecked="{Binding PlacementMode,
                         Converter={StaticResource PlacementModeConverter},
                         ConverterParameter={x:Static m:EntityPlacementMode.None},
                         Mode=TwoWay}"
                         Margin="0,0,0,4"
                         ToolTip="Select Tool">
                <Image Source="{StaticResource icoCursor}" Stretch="None" />
            </RadioButton>
            <RadioButton IsChecked="{Binding PlacementMode,
                         Converter={StaticResource PlacementModeConverter},
                         ConverterParameter={x:Static m:EntityPlacementMode.Image},
                         Mode=TwoWay}"
                         Margin="0,0,0,4"
                         ToolTip="New Image">
                <Image Source="{StaticResource icoSpriteEntity}" Stretch="None" />
            </RadioButton>
            <RadioButton IsChecked="{Binding PlacementMode,
                         Converter={StaticResource PlacementModeConverter},
                         ConverterParameter={x:Static m:EntityPlacementMode.Text},
                         Mode=TwoWay}"
                         Margin="0,0,0,4"
                         ToolTip="New Text">
                <Image Source="{StaticResource icoTextEntity}" Stretch="None" />
            </RadioButton>
            <RadioButton IsChecked="{Binding PlacementMode,
                         Converter={StaticResource PlacementModeConverter},
                         ConverterParameter={x:Static m:EntityPlacementMode.Shape},
                         Mode=TwoWay}"
                         Margin="0,0,0,4"
                         ToolTip="New Shape">
                <Image Source="{StaticResource icoShapeEntity}" Stretch="None" />
            </RadioButton>
            <RadioButton IsChecked="{Binding PlacementMode,
                         Converter={StaticResource PlacementModeConverter},
                         ConverterParameter={x:Static m:EntityPlacementMode.Blank},
                         Mode=TwoWay}"
                         Margin="0,0,0,4"
                         ToolTip="New Blank Entity">
                <Image Source="{StaticResource icoBlankEntity}" Width="16" Height="16" />
            </RadioButton>
            <Button ToolTip="Send Forward" Margin="0,4,0,4">
                <Image Source="{StaticResource icoSendForward}" Stretch="None" />
            </Button>
            <Button ToolTip="Send Backward" Margin="0,0,0,4">
                <Image Source="{StaticResource icoSendBackward}" Stretch="None" />
            </Button>
            <Button ToolTip="Send To Front" Margin="0,0,0,4">
                <Image Source="{StaticResource icoSendToFront}" Stretch="None" />
            </Button>
            <Button ToolTip="Send To Back" Margin="0,0,0,4">
                <Image Source="{StaticResource icoSendToBack}" Stretch="None" />
            </Button>
            <Button ToolTip="Align Left" Margin="0,4,0,4">
                <Image Source="{StaticResource icoAlignLeft}" Stretch="None" />
            </Button>
            <Button ToolTip="Align Center" Margin="0,0,0,4">
                <Image Source="{StaticResource icoAlignCenter}" Stretch="None" />
            </Button>
            <Button ToolTip="Align Right" Margin="0,0,0,4">
                <Image Source="{StaticResource icoAlignRight}" Stretch="None" />
            </Button>
            <Button ToolTip="Align Top" Margin="0,0,0,4">
                <Image Source="{StaticResource icoAlignTop}" Stretch="None" />
            </Button>
            <Button ToolTip="Align Middle" Margin="0,0,0,4">
                <Image Source="{StaticResource icoAlignMiddle}" Stretch="None" />
            </Button>
            <Button ToolTip="Align Bottom">
                <Image Source="{StaticResource icoAlignBottom}" Stretch="None" />
            </Button>
        </StackPanel>

        <ScrollViewer Background="Gray" HorizontalScrollBarVisibility="Visible" CanContentScroll="False">
            <Designer:DesignerCanvas x:Name="canvas"
                                     Margin="32"
                                     Width="{Binding Width}"
                                     Height="{Binding Height}"
                                     CameraLeft="{Binding CameraX}"
                                     CameraTop="{Binding CameraY}"
                                     CameraWidth="{Binding Source={x:Static m:Workspace.Instance}, Path=Project.Game.Width}"
                                     CameraHeight="{Binding Source={x:Static m:Workspace.Instance}, Path=Project.Game.Height}"
                                     ItemsSource="{Binding EntityPresenters, Mode=OneWay}"
                                     SelectedItem="{Binding Source={x:Static m:Workspace.Instance}, Path=Project.InspectorItem, Mode=OneWayToSource, Converter={StaticResource EntityConverter}}"
                                     CutCommand="{Binding CutCommand, Mode=OneWay}"
                                     PasteCommand="{Binding PasteCommand, Mode=OneWay}"
                                     CopyCommand="{Binding CopyCommand, Mode=OneWay}"
                                     DeleteCommand="{Binding DeleteCommand, Mode=OneWay}"
                                     PointCommand="{Binding AddEntityCommand, Mode=OneWay}"
                                     BeginTranslateCommand="{Binding BeginTranslateCommand, Mode=OneWay}"
                                     CommitTranslateCommand="{Binding CommitTranslateCommand, Mode=OneWay}"
                                     RequestBringIntoView="OnRequestBringIntoView" />
        </ScrollViewer>

    </DockPanel>    
</UserControl>
