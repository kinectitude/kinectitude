<?xml version="1.0" encoding="utf-8" ?>
<Game Name="Reversi HD" Width="1280" Height="720" FirstScene="Game" IsFullScreen="false" xmlns="http://www.kinectitude.com/2012/v1">

  <Using File="Kinectitude.Kinect.dll">
    <Define Name="KinectFollowComponent" Class="Kinectitude.Kinect.KinectFollowComponent"/>
    <Define Name="KinectManager" Class="Kinectitude.Kinect.KinectManager"/>
    <Define Name="GestureEvent" Class="Kinectitude.Kinect.GestureEvent"/>
  </Using>
  
  <Using File="Kinectitude.Render.dll">
    <Define Name="RenderManager" Class="Kinectitude.Render.RenderManager"/>
    <Define Name="RenderComponent" Class="Kinectitude.Render.RenderComponent"/>
    <Define Name="TextRenderComponent" Class="Kinectitude.Render.TextRenderComponent"/>
    <Define Name="ImageRenderComponent" Class="Kinectitude.Render.ImageRenderComponent" />
  </Using>

  <Using File="Kinectitude.DirectInput.dll">
    <Define Name="KeyEvent" Class="Kinectitude.DirectInput.KeyEvent"/>
    <Define Name="KeyboardManager" Class="Kinectitude.DirectInput.KeyboardManager"/>
    <Define Name="MouseManager" Class="Kinectitude.DirectInput.MouseManager"/>
    <Define Name="MouseFollowComponent" Class="Kinectitude.DirectInput.MouseFollowComponent"/>
    <Define Name="MouseClickEvent" Class="Kinectitude.DirectInput.MouseClickEvent"/>
  </Using>

  <Prototype Name="LightSquare">
    <Component Type="TransformComponent" Width="80" Height="80" />
    <Component Type="RenderComponent" Shape="Rectangle" FillColor="#cccccc" />
  </Prototype>

  <Prototype Name="DarkSquare">
    <Component Type="TransformComponent" Width="80" Height="80" />
    <Component Type="RenderComponent" Shape="Rectangle" FillColor="#999999" />
  </Prototype>

  <Prototype Name="Chip" state="-1">
    <Component Type="TransformComponent" Width="50" Height="50" />
    <Component Type="RenderComponent" LineThickness="1" LineColor="#000000" FillColor="#ffffff" Shape="Ellipse" Opacity="0" />

    <Event Type="TriggerOccursEvent" Trigger="Play">
      <Condition If="this.state == -1 and scene.playX &gt;= this.gridX and scene.playX &lt; this.gridX + 1 and scene.playY &gt;= this.gridY and scene.playY &lt; this.gridY + 1">

        <Action Type="SetAction" Target="scene.sourceX" Value="this.gridX" />
        <Action Type="SetAction" Target="scene.sourceY" Value="this.gridY" />
        <Action Type="SetAction" Target="scene.validMove" Value="[false]" />
        
        <Action Type="SetAction" Target="scene.scanDirection" Value="0" />
        <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX - 1]" />
        <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY - 1]" />
        <Action Type="FireTriggerAction" Name="Scan" />

        <Action Type="SetAction" Target="scene.scanDirection" Value="1" />
        <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX]" />
        <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY - 1]" />
        <Action Type="FireTriggerAction" Name="Scan" />
        
        <Action Type="SetAction" Target="scene.scanDirection" Value="2" />
        <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX + 1]" />
        <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY - 1]" />
        <Action Type="FireTriggerAction" Name="Scan" />
        
        <Action Type="SetAction" Target="scene.scanDirection" Value="3" />
        <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX - 1]" />
        <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY]" />
        <Action Type="FireTriggerAction" Name="Scan" />
        
        <Action Type="SetAction" Target="scene.scanDirection" Value="4" />
        <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX + 1]" />
        <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY]" />
        <Action Type="FireTriggerAction" Name="Scan" />
        
        <Action Type="SetAction" Target="scene.scanDirection" Value="5" />
        <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX - 1]" />
        <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY + 1]" />
        <Action Type="FireTriggerAction" Name="Scan" />
        
        <Action Type="SetAction" Target="scene.scanDirection" Value="6" />
        <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX]" />
        <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY + 1]" />
        <Action Type="FireTriggerAction" Name="Scan" />
        
        <Action Type="SetAction" Target="scene.scanDirection" Value="7" />
        <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX + 1]" />
        <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY + 1]" />
        <Action Type="FireTriggerAction" Name="Scan" />

        <Condition If="scene.validMove">

          <Action Type="SetAction" Target="this.state" Value="[scene.currentPlayer]" />

          <Condition If="this.state == 0">
            <Action Type="IncrementAction" Target="scene.player0Score" />
            <Action Type="SetAction" Target="RenderComponent.FillColor" Value="#000000" />
          </Condition>
          <Condition If="this.state == 1">
            <Action Type="IncrementAction" Target="scene.player1Score" />
            <Action Type="SetAction" Target="RenderComponent.FillColor" Value="#ffffff" />
          </Condition>

          <Action Type="SetAction" Target="RenderComponent.Opacity" Value="1" />

          <Action Type="SetAction" Target="scene.currentPlayer" Value="[(scene.currentPlayer + 1) % 2]"/>
        </Condition>

      </Condition>
    </Event>

    <Event Type="TriggerOccursEvent" Trigger="Scan">
      <Condition If="scene.scanX == this.gridX and scene.scanY == this.gridY and this.state != -1 and this.state != scene.currentPlayer">

        <Condition If="scene.scanDirection == 0">
          <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX - 1]" />
          <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY - 1]" />
        </Condition>
        <Condition If="scene.scanDirection == 1">
          <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX]" />
          <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY - 1]" />
        </Condition>
        <Condition If="scene.scanDirection == 2">
          <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX + 1]" />
          <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY - 1]" />
        </Condition>
        <Condition If="scene.scanDirection == 3">
          <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX - 1]" />
          <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY]" />
        </Condition>
        <Condition If="scene.scanDirection == 4">
          <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX + 1]" />
          <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY]" />
        </Condition>
        <Condition If="scene.scanDirection == 5">
          <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX - 1]" />
          <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY + 1]" />
        </Condition>
        <Condition If="scene.scanDirection == 6">
          <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX]" />
          <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY + 1]" />
        </Condition>
        <Condition If="scene.scanDirection == 7">
          <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX + 1]" />
          <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY + 1]" />
        </Condition>

        <Action Type="FireTriggerAction" Name="PropagateScan" />
      </Condition>
    </Event>

    <Event Type="TriggerOccursEvent" Trigger="PropagateScan">
      <Condition If="scene.scanX == this.gridX and scene.scanY == this.gridY and this.state != -1">

        <Condition If="this.state != scene.currentPlayer">

          <Condition If="scene.scanDirection == 0">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX - 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY - 1]" />
          </Condition>
          <Condition If="scene.scanDirection == 1">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY - 1]" />
          </Condition>
          <Condition If="scene.scanDirection == 2">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX + 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY - 1]" />
          </Condition>
          <Condition If="scene.scanDirection == 3">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX - 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY]" />
          </Condition>
          <Condition If="scene.scanDirection == 4">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX + 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY]" />
          </Condition>
          <Condition If="scene.scanDirection == 5">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX - 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY + 1]" />
          </Condition>
          <Condition If="scene.scanDirection == 6">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY + 1]" />
          </Condition>
          <Condition If="scene.scanDirection == 7">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX + 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY + 1]" />
          </Condition>

          <Action Type="FireTriggerAction" Name="PropagateScan" />
        </Condition>
        
        <Condition If="this.state == scene.currentPlayer">

          <Action Type="SetAction" Target="scene.validMove" Value="[true]" />

          <Condition If="scene.scanDirection == 0">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX + 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY + 1]" />
          </Condition>
          <Condition If="scene.scanDirection == 1">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY + 1]" />
          </Condition>
          <Condition If="scene.scanDirection == 2">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX - 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY + 1]" />
          </Condition>
          <Condition If="scene.scanDirection == 3">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX + 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY]" />
          </Condition>
          <Condition If="scene.scanDirection == 4">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX - 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY]" />
          </Condition>
          <Condition If="scene.scanDirection == 5">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX + 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY - 1]" />
          </Condition>
          <Condition If="scene.scanDirection == 6">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY - 1]" />
          </Condition>
          <Condition If="scene.scanDirection == 7">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX - 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY - 1]" />
          </Condition>

          <Action Type="FireTriggerAction" Name="Flip" />
        </Condition>

      </Condition>
    </Event>

    <Event Type="TriggerOccursEvent" Trigger="Flip">
      <Condition If="this.gridX == scene.scanX and this.gridY == scene.scanY">

        <Condition If="this.state != scene.currentPlayer and this.state != -1">

          <Condition If="scene.scanDirection == 0">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX + 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY + 1]" />
          </Condition>
          <Condition If="scene.scanDirection == 1">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY + 1]" />
          </Condition>
          <Condition If="scene.scanDirection == 2">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX - 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY + 1]" />
          </Condition>
          <Condition If="scene.scanDirection == 3">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX + 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY]" />
          </Condition>
          <Condition If="scene.scanDirection == 4">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX - 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY]" />
          </Condition>
          <Condition If="scene.scanDirection == 5">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX + 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY - 1]" />
          </Condition>
          <Condition If="scene.scanDirection == 6">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY - 1]" />
          </Condition>
          <Condition If="scene.scanDirection == 7">
            <Action Type="SetAction" Target="scene.scanX" Value="[this.gridX - 1]" />
            <Action Type="SetAction" Target="scene.scanY" Value="[this.gridY - 1]" />
          </Condition>

          <Action Type="SetAction" Target="this.state" Value="[scene.currentPlayer]" />

          <Condition If="this.state == 0">
            <Action Type="IncrementAction" Target="scene.player1Score" IncrementBy="-1" />
            <Action Type="IncrementAction" Target="scene.player0Score" />
            <Action Type="SetAction" Target="RenderComponent.FillColor" Value="#000000" />
          </Condition>
          <Condition If="this.state == 1">
            <Action Type="IncrementAction" Target="scene.player0Score" IncrementBy="-1" />
            <Action Type="IncrementAction" Target="scene.player1Score" />
            <Action Type="SetAction" Target="RenderComponent.FillColor" Value="#ffffff" />
          </Condition>

          <Action Type="SetAction" Target="RenderComponent.Opacity" Value="1" />

          <Action Type="FireTriggerAction" Name="Flip" />
        </Condition>

      </Condition>

    </Event>

  </Prototype>

  <Scene Name="Game" currentPlayer="0" player0Score="2" player1Score="2">

    <Entity Name="Background">
      <Component Type="TransformComponent" X="640" Y="360" Width="1280" Height="720" />
      <Component Type="RenderComponent" FillColor="#007510" />
    </Entity>

    <!-- Row 1 -->

    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="80" Y="80" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="160" Y="80" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="240" Y="80" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="320" Y="80" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="400" Y="80" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="480" Y="80" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="560" Y="80" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="640" Y="80" />
    </Entity>

    <Entity Prototype="Chip" gridX="0" gridY="0">
      <Component Type="TransformComponent" X="80" Y="80" />
    </Entity>
    <Entity Prototype="Chip" gridX="1" gridY="0">
      <Component Type="TransformComponent" X="160" Y="80" />
    </Entity>
    <Entity Prototype="Chip" gridX="2" gridY="0">
      <Component Type="TransformComponent" X="240" Y="80" />
    </Entity>
    <Entity Prototype="Chip" gridX="3" gridY="0">
      <Component Type="TransformComponent" X="320" Y="80" />
    </Entity>
    <Entity Prototype="Chip" gridX="4" gridY="0">
      <Component Type="TransformComponent" X="400" Y="80" />
    </Entity>
    <Entity Prototype="Chip" gridX="5" gridY="0">
      <Component Type="TransformComponent" X="480" Y="80" />
    </Entity>
    <Entity Prototype="Chip" gridX="6" gridY="0">
      <Component Type="TransformComponent" X="560" Y="80" />
    </Entity>
    <Entity Prototype="Chip" gridX="7" gridY="0">
      <Component Type="TransformComponent" X="640" Y="80" />
    </Entity>

    <!-- Row 2 -->

    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="80" Y="160" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="160" Y="160" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="240" Y="160" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="320" Y="160" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="400" Y="160" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="480" Y="160" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="560" Y="160" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="640" Y="160" />
    </Entity>

    <Entity Prototype="Chip" gridX="0" gridY="1">
      <Component Type="TransformComponent" X="80" Y="160" />
    </Entity>
    <Entity Prototype="Chip" gridX="1" gridY="1">
      <Component Type="TransformComponent" X="160" Y="160" />
    </Entity>
    <Entity Prototype="Chip" gridX="2" gridY="1">
      <Component Type="TransformComponent" X="240" Y="160" />
    </Entity>
    <Entity Prototype="Chip" gridX="3" gridY="1">
      <Component Type="TransformComponent" X="320" Y="160" />
    </Entity>
    <Entity Prototype="Chip" gridX="4" gridY="1">
      <Component Type="TransformComponent" X="400" Y="160" />
    </Entity>
    <Entity Prototype="Chip" gridX="5" gridY="1">
      <Component Type="TransformComponent" X="480" Y="160" />
    </Entity>
    <Entity Prototype="Chip" gridX="6" gridY="1">
      <Component Type="TransformComponent" X="560" Y="160" />
    </Entity>
    <Entity Prototype="Chip" gridX="7" gridY="1">
      <Component Type="TransformComponent" X="640" Y="160" />
    </Entity>

    <!-- Row 3 -->

    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="80" Y="240" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="160" Y="240" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="240" Y="240" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="320" Y="240" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="400" Y="240" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="480" Y="240" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="560" Y="240" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="640" Y="240" />
    </Entity>

    <Entity Prototype="Chip" gridX="0" gridY="2">
      <Component Type="TransformComponent" X="80" Y="240" />
    </Entity>
    <Entity Prototype="Chip" gridX="1" gridY="2">
      <Component Type="TransformComponent" X="160" Y="240" />
    </Entity>
    <Entity Prototype="Chip" gridX="2" gridY="2">
      <Component Type="TransformComponent" X="240" Y="240" />
    </Entity>
    <Entity Prototype="Chip" gridX="3" gridY="2">
      <Component Type="TransformComponent" X="320" Y="240" />
    </Entity>
    <Entity Prototype="Chip" gridX="4" gridY="2">
      <Component Type="TransformComponent" X="400" Y="240" />
    </Entity>
    <Entity Prototype="Chip" gridX="5" gridY="2">
      <Component Type="TransformComponent" X="480" Y="240" />
    </Entity>
    <Entity Prototype="Chip" gridX="6" gridY="2">
      <Component Type="TransformComponent" X="560" Y="240" />
    </Entity>
    <Entity Prototype="Chip" gridX="7" gridY="2">
      <Component Type="TransformComponent" X="640" Y="240" />
    </Entity>

    <!-- Row 4 -->

    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="80" Y="320" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="160" Y="320" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="240" Y="320" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="320" Y="320" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="400" Y="320" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="480" Y="320" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="560" Y="320" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="640" Y="320" />
    </Entity>

    <Entity Prototype="Chip" gridX="0" gridY="3">
      <Component Type="TransformComponent" X="80" Y="320" />
    </Entity>
    <Entity Prototype="Chip" gridX="1" gridY="3">
      <Component Type="TransformComponent" X="160" Y="320" />
    </Entity>
    <Entity Prototype="Chip" gridX="2" gridY="3">
      <Component Type="TransformComponent" X="240" Y="320" />
    </Entity>
    <Entity Prototype="Chip" gridX="3" gridY="3" state="0">
      <Component Type="TransformComponent" X="320" Y="320" />
      <Component Type="RenderComponent" Opacity="1" FillColor="#000000" />
    </Entity>
    <Entity Prototype="Chip" gridX="4" gridY="3" state="1">
      <Component Type="TransformComponent" X="400" Y="320" />
      <Component Type="RenderComponent" Opacity="1" FillColor="#ffffff" />
    </Entity>
    <Entity Prototype="Chip" gridX="5" gridY="3">
      <Component Type="TransformComponent" X="480" Y="320" />
    </Entity>
    <Entity Prototype="Chip" gridX="6" gridY="3">
      <Component Type="TransformComponent" X="560" Y="320" />
    </Entity>
    <Entity Prototype="Chip" gridX="7" gridY="3">
      <Component Type="TransformComponent" X="640" Y="320" />
    </Entity>

    <!-- Row 5 -->

    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="80" Y="400" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="160" Y="400" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="240" Y="400" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="320" Y="400" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="400" Y="400" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="480" Y="400" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="560" Y="400" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="640" Y="400" />
    </Entity>

    <Entity Prototype="Chip" gridX="0" gridY="4">
      <Component Type="TransformComponent" X="80" Y="400" />
    </Entity>
    <Entity Prototype="Chip" gridX="1" gridY="4">
      <Component Type="TransformComponent" X="160" Y="400" />
    </Entity>
    <Entity Prototype="Chip" gridX="2" gridY="4">
      <Component Type="TransformComponent" X="240" Y="400" />
    </Entity>
    <Entity Prototype="Chip" gridX="3" gridY="4" state="1">
      <Component Type="TransformComponent" X="320" Y="400" />
      <Component Type="RenderComponent" Opacity="1" FillColor="#ffffff" />
    </Entity>
    <Entity Prototype="Chip" gridX="4" gridY="4" state="0">
      <Component Type="TransformComponent" X="400" Y="400" />
      <Component Type="RenderComponent" Opacity="1" FillColor="#000000" />
    </Entity>
    <Entity Prototype="Chip" gridX="5" gridY="4">
      <Component Type="TransformComponent" X="480" Y="400" />
    </Entity>
    <Entity Prototype="Chip" gridX="6" gridY="4">
      <Component Type="TransformComponent" X="560" Y="400" />
    </Entity>
    <Entity Prototype="Chip" gridX="7" gridY="4">
      <Component Type="TransformComponent" X="640" Y="400" />
    </Entity>

    <!-- Row 6 -->

    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="80" Y="480" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="160" Y="480" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="240" Y="480" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="320" Y="480" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="400" Y="480" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="480" Y="480" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="560" Y="480" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="640" Y="480" />
    </Entity>

    <Entity Prototype="Chip" gridX="0" gridY="5">
      <Component Type="TransformComponent" X="80" Y="480" />
    </Entity>
    <Entity Prototype="Chip" gridX="1" gridY="5">
      <Component Type="TransformComponent" X="160" Y="480" />
    </Entity>
    <Entity Prototype="Chip" gridX="2" gridY="5">
      <Component Type="TransformComponent" X="240" Y="480" />
    </Entity>
    <Entity Prototype="Chip" gridX="3" gridY="5">
      <Component Type="TransformComponent" X="320" Y="480" />
    </Entity>
    <Entity Prototype="Chip" gridX="4" gridY="5">
      <Component Type="TransformComponent" X="400" Y="480" />
    </Entity>
    <Entity Prototype="Chip" gridX="5" gridY="5">
      <Component Type="TransformComponent" X="480" Y="480" />
    </Entity>
    <Entity Prototype="Chip" gridX="6" gridY="5">
      <Component Type="TransformComponent" X="560" Y="480" />
    </Entity>
    <Entity Prototype="Chip" gridX="7" gridY="5">
      <Component Type="TransformComponent" X="640" Y="480" />
    </Entity>

    <!-- Row 7 -->

    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="80" Y="560" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="160" Y="560" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="240" Y="560" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="320" Y="560" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="400" Y="560" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="480" Y="560" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="560" Y="560" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="640" Y="560" />
    </Entity>

    <Entity Prototype="Chip" gridX="0" gridY="6">
      <Component Type="TransformComponent" X="80" Y="560" />
    </Entity>
    <Entity Prototype="Chip" gridX="1" gridY="6">
      <Component Type="TransformComponent" X="160" Y="560" />
    </Entity>
    <Entity Prototype="Chip" gridX="2" gridY="6">
      <Component Type="TransformComponent" X="240" Y="560" />
    </Entity>
    <Entity Prototype="Chip" gridX="3" gridY="6">
      <Component Type="TransformComponent" X="320" Y="560" />
    </Entity>
    <Entity Prototype="Chip" gridX="4" gridY="6">
      <Component Type="TransformComponent" X="400" Y="560" />
    </Entity>
    <Entity Prototype="Chip" gridX="5" gridY="6">
      <Component Type="TransformComponent" X="480" Y="560" />
    </Entity>
    <Entity Prototype="Chip" gridX="6" gridY="6">
      <Component Type="TransformComponent" X="560" Y="560" />
    </Entity>
    <Entity Prototype="Chip" gridX="7" gridY="6">
      <Component Type="TransformComponent" X="640" Y="560" />
    </Entity>

    <!-- Row 8 -->

    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="80" Y="640" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="160" Y="640" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="240" Y="640" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="320" Y="640" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="400" Y="640" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="480" Y="640" />
    </Entity>
    <Entity Prototype="DarkSquare">
      <Component Type="TransformComponent" X="560" Y="640" />
    </Entity>
    <Entity Prototype="LightSquare">
      <Component Type="TransformComponent" X="640" Y="640" />
    </Entity>

    <Entity Prototype="Chip" gridX="0" gridY="7">
      <Component Type="TransformComponent" X="80" Y="640" />
    </Entity>
    <Entity Prototype="Chip" gridX="1" gridY="7">
      <Component Type="TransformComponent" X="160" Y="640" />
    </Entity>
    <Entity Prototype="Chip" gridX="2" gridY="7">
      <Component Type="TransformComponent" X="240" Y="640" />
    </Entity>
    <Entity Prototype="Chip" gridX="3" gridY="7">
      <Component Type="TransformComponent" X="320" Y="640" />
    </Entity>
    <Entity Prototype="Chip" gridX="4" gridY="7">
      <Component Type="TransformComponent" X="400" Y="640" />
    </Entity>
    <Entity Prototype="Chip" gridX="5" gridY="7">
      <Component Type="TransformComponent" X="480" Y="640" />
    </Entity>
    <Entity Prototype="Chip" gridX="6" gridY="7">
      <Component Type="TransformComponent" X="560" Y="640" />
    </Entity>
    <Entity Prototype="Chip" gridX="7" gridY="7">
      <Component Type="TransformComponent" X="640" Y="640" />
    </Entity>

    <!-- Controls -->

    <Entity>
      <Component Type="TransformComponent" X="700" Y="40" />
      <Component Type="TextRenderComponent" Value="Current Player: 0" FontColor="#ffffff" FontSize="24" />
      <Event Type="AttributeChangesEvent" Target="{scene.currentPlayer}">
        <Action Type="SetAction" Target="TextRenderComponent.Value" Value="Current Player: {scene.currentPlayer}" />
      </Event>
    </Entity>

    <Entity>
      <Component Type="TransformComponent" X="700" Y="70" />
      <Component Type="TextRenderComponent" Value="Last Play: " FontColor="#ffffff" FontSize="24" />
      <Event Type="AttributeChangesEvent" Target="{scene.playX} {scene.playY}">
        <Action Type="SetAction" Target="TextRenderComponent.Value" Value="Last Play: ({scene.playX}, {scene.playY})" />
      </Event>
    </Entity>

    <Entity>
      <Component Type="TransformComponent" X="700" Y="100" />
      <Component Type="TextRenderComponent" Value="Valid Move? " FontColor="#ffffff" FontSize="24" />
      <Event Type="AttributeChangesEvent" Target="{scene.validMove}">
        <Action Type="SetAction" Target="TextRenderComponent.Value" Value="Valid Move? {scene.validMove}" />
      </Event>
    </Entity>

    <Entity>
      <Component Type="TransformComponent" X="700" Y="130" />
      <Component Type="TextRenderComponent" Value="Player 0 Score: 2" FontColor="#ffffff" FontSize="24" />
      <Event Type="AttributeChangesEvent" Target="{scene.player0Score}">
        <Action Type="SetAction" Target="TextRenderComponent.Value" Value="Player 0 Score: {scene.player0Score}" />
      </Event>
    </Entity>

    <Entity>
      <Component Type="TransformComponent" X="700" Y="160" />
      <Component Type="TextRenderComponent" Value="Player 1 Score: 2" FontColor="#ffffff" FontSize="24" />
      <Event Type="AttributeChangesEvent" Target="{scene.player1Score}">
        <Action Type="SetAction" Target="TextRenderComponent.Value" Value="Player 1 Score: {scene.player1Score}" />
      </Event>
    </Entity>

    <Entity>
      <Component Type="TransformComponent" Width="32" Height="32" X="640" Y="360" />
      <Component Type="RenderComponent" Shape="Ellipse" FillColor="LimeGreen" />
      <Component Type="MouseFollowComponent" Direction="Both" />
      <Event Type="MouseClickEvent" Button="Left">
        <Action Type="SetAction" Target="scene.playX" Value="[(this.TransformComponent.X - 40) / 80]" />
        <Action Type="SetAction" Target="scene.playY" Value="[(this.TransformComponent.Y - 40) / 80]" />
        <Action Type="FireTriggerAction" Name="Play" />
      </Event>
    </Entity>


  </Scene>

</Game>