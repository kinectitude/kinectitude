<?xml version="1.0" encoding="utf-8" ?>
<!--Game Name="pong" Width="800" Height="600" FirstScene="main" IsFullScreen="false" xmlns="http://www.kinectitude.com/2012/v1"-->
<Game Name="pong" Width="800" Height="600" FirstScene="game" IsFullScreen="false">

  <Using File="Kinectitude.Kinect.dll">
    <Define Name="KinectFollowComponent" Class="Kinectitude.Kinect.KinectFollowComponent"/>
    <Define Name="KinectManager" Class="Kinectitude.Kinect.KinectManager"/>
  </Using>

  <Using File="Kinectitude.Physics.dll">
    <Define Name="PhysicsManager" Class="Kinectitude.Physics.PhysicsManager"/>
    <Define Name="PhysicsComponent" Class="Kinectitude.Physics.PhysicsComponent"/>
    <Define Name="CrossesLineEvent" Class="Kinectitude.Physics.CrossesLineEvent"/>
    <Define Name="CollisionEvent" Class="Kinectitude.Physics.CollisionEvent"/>
  </Using>

  <Using File="Kinectitude.Render.dll">
    <Define Name="RenderManager" Class="Kinectitude.Render.RenderManager"/>
    <Define Name="RenderComponent" Class="Kinectitude.Render.RenderComponent"/>
    <Define Name="TextRenderComponent" Class="Kinectitude.Render.TextRenderComponent"/>
    <Define Name="ImageRenderComponent" Class="Kinectitude.Render.ImageRenderComponent" />
    <Define Name="SetTextAction" Class="Kinectitude.Render.SetTextAction"/>
  </Using>
    
  <Prototype Name="paddle">
    <Component Type="KinectFollowComponent" Direction="Y" Player="P1" Joint="HandLeft"/>
    <Component Type="RenderComponent" FillColor="LimeGreen" Shape="Rectangle"/>
    <Component Type="PhysicsComponent" XVelocity="0" YVelocity="0" Shape="Rectangle" Restitution="0" Mass="1" Friction="0" LinearDamping="0" BodyType="Kinematic"/>
    <Component Type="TransformComponent" Width="24" Height="128"/>
  </Prototype>

  <Prototype Name="text">
    <Component Type="TextRenderComponent" FontFamily="Arial" FontWeight="Normal" FontStyle="Normal" FontStretch="Normal" FontSize="36" FontColor="White" />
  </Prototype>
  
  <Prototype Name="score" Prototype="text">
    <Component Type="TextRenderComponent" Value="0"/>
  </Prototype>

  <Prototype Name="bar">
    <Component Type="RenderComponent" FillColor="LimeGreen" Shape="Rectangle"/>
    <Component Type="TransformComponent" Width="800" Height="10" X="400" Y="340"/>
  </Prototype>
  
  <Prototype Name="ball" Value="0">
    <Component Type="RenderComponent" FillColor="Red" Shape="Ellipse" />
    <Component Type="TransformComponent" X="250" Y="250" Width="24" Height="24"/>
    <Component Type="PhysicsComponent" XVelocity="40" YVelocity="20" Shape="Ellipse" Restitution="1" Mass="1" Friction="0" LinearDamping="0" BodyType="Dynamic"/>
    <Event Type="CollisionEvent" CollidesWith="left_wall">
      <Action Type="SetPositionAction" X="400" Y="300" />
      <Action Type="IncrementAction" Target="scene.player2Score"/>
    </Event>
    <!-- this is done differently then the other one to test both methods-->
    <Event Type="CrossesLineEvent" Location="800" Line="X" Direction="Positive">
      <Action Type="SetPositionAction" X="400" Y="300" />
      <Action Type="IncrementAction" Target="scene.player1Score" />
      <Action Type="FireTriggerAction" Name="player1Scores"/>
    </Event>
    <Event Type="CollisionEvent" CollidesWith="$paddle">
      <Action Type="SetAttributeAction" Target="scene.lastHit" Value="!CollidesWith"/>
      <Action Type="SetAttributeAction" Target="scene.lastX" Value="!CollidesWith.TransformComponent.X"/>
      <Action Type="SetAttributeAction" Target="scene.lastY" Value="!CollidesWith.TransformComponent.Y"/>
      <Action Type="FireTriggerAction" Name="changeInfo"/>
    </Event>
  </Prototype>

  <Prototype Name="rightBall" Prototype="ball" Value="0.1">
    <Event Type="CollisionEvent" CollidesWith="left_wall">
      <Action Type="IncrementAction" Target="scene.player2Score" />
      <Action Type="DestroyAction"/>
    </Event>
    <Event Type="CrossesLineEvent" Location="800" Line="X" Direction="Positive">
      <Action Type="IncrementAction" Target="scene.player1Score" />
      <Action Type="DestroyAction"/>
    </Event>
  </Prototype>

  <Prototype Name="leftBall" Prototype="rightBall" Value="0.1">
    <Component Type="PhysicsComponent" XVelocity="-40"/>
  </Prototype>
  
  <!-- tests that it will inherit from paddle-->
  <Prototype Name="endPaddle" Prototype="paddle">
    <Event Type="CrossesLineEvent" Line="Y" Location="440"  Direction="Positive">
      <Action Type="PopSceneAction"/>
    </Event>
    <Event Type="CrossesLineEvent" Line="Y" Location="150"  Direction="Negative">
      <Action Type="ChangeSceneAction" Target="Main Menu"/>
    </Event>
  </Prototype>

  <!--this is to test that muti-inheritance works and in the correct order it is stupid to actually do for this-->
  <Prototype Name="highY">
    <Component Type="TransformComponent" Y="100"/>
  </Prototype>

  <Scene Name="Main Menu" numReadY="0" ready1="" ready2="">

    <Entity Name="tennis">
      <Component Type="TransformComponent" X="400.5" Y="300.5" Width="263" Height="263" />
      <Component Type="ImageRenderComponent" Image="tennisball.png" />
    </Entity>
    
    <Entity Name="topText" Prototype="text">
      <Component Type="TransformComponent" X="0" Y="24" Width="800"/>
      <Component Type="TextRenderComponent" Value="Kinect Wimbledon Deluxe" FontColor="Yellow" TextAlignment="Center" FontWeight="Bold" />
    </Entity>

    <Entity Name="instructions" Prototype="text">
      <Component Type="TransformComponent" X="0" Y="80" Width="800"/>
      <Component Type="TextRenderComponent" Value="Move below the line to start" FontColor="White" TextAlignment="Center" FontSize="24" />
    </Entity>

    <Entity Name="ready1" Prototype="text">
      <Component Type="TransformComponent" X="200" Y="500" />
      <Component Type="TextRenderComponent" Value="Player 1 Not ready!" TextAlignment="Center" FontColor="White" />
      <Event Type="AttributeChangesEvent" Target="scene.ready1">
        <Action Type="SetTextAction" Value="scene.ready1" />
      </Event>
    </Entity>

    <Entity Name="ready2" Prototype="text">
      <Component Type="TransformComponent" X="600" Y="500" />
      <Component Type="TextRenderComponent" Value="Player 2 Not ready!" TextAlignment="Center" FontColor="White" />
      <Event Type="AttributeChangesEvent" Target="scene.ready2">
        <Action Type="SetTextAction" Value="scene.ready2" />
      </Event>
    </Entity>

    <Entity Name="player1" Prototype="paddle">
      <Component Type="TransformComponent" X="17" Y="250"/>
      <Event Type="CrossesLineEvent" Line="Y" Location="350"  Direction="Positive">
        <Action Type="SetAttributeAction" Target="scene.ready1" Value="player 1 is ready!"/>
        <Condition If="scene.ready2 and scene.ready1 or scene.ready1 and scene.ready2">
          <Action Type="ChangeSceneAction" Target="Game"/>
        </Condition>
      </Event>
    </Entity>

    <Entity Name="player2" Prototype="paddle">
      <Component Type="TransformComponent" X="782" Y="250"/>
      <!--this is testing to see that I can ovrride things in a Prototype-->
      <Component Type="KinectFollowComponent" Player="P1" Joint="HandRight" />
      <Event Type="CrossesLineEvent" Line="Y" Location="350"  Direction="Positive">
        <Action Type="SetAttributeAction" Target="scene.ready2" Value="player 2 is ready!"/>
        <Condition If="scene.ready1">
          <Action Type="ChangeSceneAction" Target="game"/>
        </Condition>
      </Event>
    </Entity>

    <Entity Name="readybar" Prototype="bar"/>
  </Scene>

  <Scene Name="game" player1Score="0" player2Score="0">

    <Entity Name="player1" Prototype="paddle">
      <Component Type="TransformComponent" X="17" Y="250"/>
      <Event Type="CollisionEvent" CollidesWith="$ball">
        <Action Type="IncrementAction" Target="scene.player1Score" IncrementBy="!CollidesWith.Value"/>
      </Event>
    </Entity>

    <Entity Name="player2" Prototype="paddle">
      <Component Type="KinectFollowComponent" Player="P1" Joint="HandRight" />
      <Component Type="TransformComponent" X="782" Y="250"/>
      <Event Type="CollisionEvent" CollidesWith="$ball">
        <Action Type="IncrementAction" Target="scene.player2Score" IncrementBy="!CollidesWith.Value"/>
      </Event>
    </Entity>

    <Entity Name="top_wall">
      <Component Type="TransformComponent" X="400" Y="0" Width="800" Height="2"/>
      <Component Type="PhysicsComponent" XVelocity="0" YVelocity="0" Shape="Rectangle" Restitution="0" Mass="1" Friction="0" LinearDamping="0" BodyType="Kinematic"/>
      <Component Type="RenderComponent" FillColor="LimeGreen" Shape="Rectangle" />
    </Entity>

    <Entity Name="bottom_wall">
      <Component Type="TransformComponent" X="400" Y="600" Width="800" Height="2"/>
      <Component Type="PhysicsComponent" XVelocity="0" YVelocity="0" Shape="Rectangle" Restitution="0" Mass="1" Friction="0" LinearDamping="0" BodyType="Kinematic"/>
    </Entity>

    <Entity Name="left_wall">
      <Component Type="TransformComponent" X="0" Y="300" Width="2" Height="600"/>
      <Component Type="PhysicsComponent" XVelocity="0" YVelocity="0" Shape="Rectangle" Restitution="0" Mass="1" Friction="0" LinearDamping="0" BodyType="Kinematic"/>
    </Entity>

    <Entity Name="mainBall" Prototype="ball">
      <Component Type="RenderComponent" FillColor="LimeGreen" Shape="Ellipse" />
    </Entity>

    <Entity Prototype="score">
      <Component Type="TransformComponent" X="56" Y="24"/>
      <Event Type="TriggerOccursEvent" Trigger="player1Scores">
        <Action Type="SetTextAction" Value="scene.player1Score" />
      </Event>
      <Event Type="AttributeEqualsEvent" Target="scene.player1Score" Value="15">
        <Action Type="SetAttributeAction" Target="game.winner" Value="player 1 wins"/>
        <Action Type="ChangeSceneAction" Target="Game Over"/>
      </Event>
      <Event Type="AttributeEqualsEvent" Target="scene.player1Score" Value="10">
        <Action Type="CreateEntityAction" Prototype="leftBall"/>
      </Event>
    </Entity>

    <Entity Prototype="score">
      <Component Type="TransformComponent"  X="724" Y="24"/>
      <Event Type="AttributeChangesEvent" Target="scene.player2Score">
        <Action Type="SetTextAction" Value="scene.player2Score" />
      </Event>
      <Event Type="AttributeEqualsEvent" Target="scene.player2Score" Value="15">
        <Action Type="SetAttributeAction" Target="game.winner" Value="player 2 wins"/>
        <Action Type="ChangeSceneAction" Target="gameOver"/>
      </Event>
      <Event Type="AttributeEqualsEvent" Target="scene.player2Score" Value="10">
        <Action Type="CreateEntityAction" Prototype="rightBall"/>
      </Event>
    </Entity>

    <Entity Prototype="text">
      <Component Type="TransformComponent" X="0" Y="75" Width="800"/>
      <Component Type="TextRenderComponent" Value="" FontSize="25" TextAlignment="Center"/>
      <Event Type="TriggerOccursEvent" Trigger="changeInfo">
        <Action Type="SetTextAction" Value="Last hit by {scene.lastHit} At \{X,Y\} \{{scene.lastX},{scene.lastY}\}"/>
      </Event>
    </Entity>
  </Scene>

  <Scene Name="Game Over">
    
    <Entity Name="gameOver" Prototype="text">
      <Component Type="TransformComponent" X="300" Y="20"/>
      <!-- we should make this work later so it can have at least an inital value of what it is
      <Component Type="TextRenderComponent" Value="={game.winner}" FontColor="White" />-->
      <!--This can simply have Value=game.winner, since it won't change, but I needed somewhere to test Scene StartEvent-->
      <Component Type="TextRenderComponent" Value="" FontColor="White" />
      <Event Type="SceneStartsEvent">
        <Action Type="SetTextAction" Value="game.winner" />
      </Event>
    </Entity>

    <Entity Name="instructions" Prototype="text">
      <Component Type="TransformComponent" X="100" Y="100"/>
      <Component Type="TextRenderComponent" Value="Top line to for menu bottom to quit" FontColor="White" />
    </Entity>

    <Entity Name="player1" Prototype="endPaddle">
      <Component Type="TransformComponent" X="17" Y="250"/>
    </Entity>

    <Entity Name="player2" Prototype="endPaddle">
      <Component Type="TransformComponent" X="782" Y="250"/>
      <Component Type="KinectFollowComponent" Joint="HandRight" />
    </Entity>

    <Entity Name="bottomBar" Prototype="bar">
      <Component Type="TransformComponent" Y="500"/>
    </Entity>

    <Entity Name="topBar" Prototype="highY bar"/>

  </Scene>
</Game>