using Kinectitude.Physics.dll{
    define Physics as Kinectitude.Physics.PhysicsComponent
    define CrossesLine as Kinectitude.Physics.CrossesLineEvent
    define Collision as Kinectitude.Physics.CollisionEvent
    define PhysicsMan as Kinectitude.Physics.PhysicsManager
}

using Kinectitude.Render.dll{
    define RenderService as Kinectitude.Render.RenderService
    define Render as Kinectitude.Render.RenderComponent
    define TextRender as Kinectitude.Render.TextRenderComponent
    define ImageRender as Kinectitude.Render.ImageRenderComponent
}

using Kinectitude.DirectInput.dll{
    define Key as Kinectitude.DirectInput.KeyEvent
}

Game (Width = 800,  Height = 600, FirstScene = "main", IsFullScreen = false, Name="breakout"){

    Prototype Scroller(){
        Event AttributeChanges(Target=scene.scrollBy + xval){
            Physics.XVelocity = xval + scene.scrollBy
        }
    }

    Prototype Character : Scroller(){
        Event TriggerOccurs(Trigger = "up"){
            if(Physics.YVelocity == 0){
                Physics.YVelocity = -40
                //Jump for the character's jumpDuration seconds then stop the jump
                CreateTimer(Name = "jump", Duration = jumpDuration, Recurring = false, Trigger = "top jump")
            }
        }
        
        Event TriggerOccurs(Trigger = "top jump"){
            Physics.YVelocity = 0
        }
        
        Event TriggerOccurs(Trigger = "left"){
            xval = -speed
            ImageRender.Row = 2
            ImageRender.Animated = true
            leftHeld = true
            if(scrolling == "left"){
                scene.scrollBy = speed
            }
        }
        
        Event TriggerOccurs(Trigger = "right"){
            xval = speed
            ImageRender.Row = 1
            ImageRender.Animated = true
            rightHeld = true
            if(scrolling == "right"){
                scene.scrollBy = -speed
            }
        }
        
        Event TriggerOccurs(Trigger = "stopLeft"){
            leftHeld = false
            ImageRender.Animated = false
            scene.scrollBy = 0
            if(rightHeld)
            {
                FireTrigger(Name = "right")
            }
            else
            {
                xval = 0
            }
        }
        
        Event TriggerOccurs(Trigger = "stopRight"){
            rightHeld = false
            ImageRender.Animated = false
            scene.scrollBy = 0
            if(leftHeld)
            {
                FireTrigger(Name = "left")
            }
            else
            {
                xval = 0
            }
        }
    }

    Prototype GoodGuy : Character (lives = 5, jumpDuration = 1.5, speed = 50) {
        Component Transform(X = 250, Y = 450)
        Component Physics(Shape = Rectangle, Restitution = 0, Friction = 0, 
            MovesWhenHit = false, FixedRotation = true, IgnoreCollisionsWith = $GoodGuy)
        
        Event OnCreate(){
            id = scene.id
            scene.id += 1
        }
            
        Event Collision(CollidesWith = $BadGuy + $Lava){
            //TOOD add invinsible here for a specific time
            lives -= 1
            Transform.X = 250
            Transform.Y = 80
			scrolling = false
            if(lives == 0){
                FireTrigger(Name = "dead" + id)
                finalScore = score
                ImageRender.Visible = false
            }
        }
    }

    Prototype BadGuy : Character(){
        Component Physics(MaximumSpeed= 70, Shape = Rectangle, Restitution = 0, 
            Friction = 0, MovesWhenHit = false, FixedRotation = true, IgnoreCollisionsWith= $BadGuy)
    }
    
    Prototype text() {
        Component TextRender(FontFamily = "Arial", FontWeight = "Normal", 
            FontStyle = "Normal", FontStretch = "Normal", FontSize = 36, FontColor = "Black")
    }

    Service RenderService(Width = 1000, Height = 800)
    
    Scene main(){
        Entity hello : text(){
            Component Transform(X = 0, Y = 20, Width = 800, Height = 50)
            Component TextRender(Value = "Scrollergame!  Press P to start!")
            Event Key (Button="P", KeyState="Pressed"){
                ChangeScene(Target = "game")
            }
        }
    }
    
    Scene game(){
        Manager PhysicsMan(YGravity = 9.8)
        
        Entity MainPlayer : GoodGuy(){
            Component Transform (Width = 39, Height = 44)
            Component ImageRender(Image = "sonicSprites.png", Animated = false, Duration = 1.4)
            
            Event Key(Button="LeftArrow", KeyState="Pressed"){
                FireTrigger(Name = "left")
            }
            
            Event Key(Button="RightArrow", KeyState="Pressed"){
                FireTrigger(Name = "right")
            }
            
            Event Key(Button="LeftArrow", KeyState="Released"){
                FireTrigger(Name = "stopLeft")
            }
            
            Event Key(Button="RightArrow", KeyState="Released"){
                FireTrigger(Name = "stopRight")
            }
            
            Event Key(Button="UpArrow", KeyState="Pressed"){
                FireTrigger(Name = "up")
            }
            
            Event CrossesLine(Line = "X", Location = "700", Direction = "Positive"){
                scrolling = "right"
                scene.scrollBy = -speed
            }
            
            Event CrossesLine(Line = "X", Location = "700", Direction = "Negative"){
                scrolling = false
                scene.scrollBy = 0
            }
			
			
			Event CrossesLine(Line = "X", Location = "100", Direction = "Negative"){
                scrolling = "left"
                scene.scrollBy = speed
            }
            
            Event CrossesLine(Line = "X", Location = "100", Direction = "Positive"){
                scrolling = false
                scene.scrollBy = 0
            }
        }
        
        Entity (){
            Component Transform(Width = 2, Height = 800,  X = 699, Y = 400)
            Component Render(Shape = "Rectangle", FillColor = "Red")
        }
		
		Entity (){
            Component Transform(Width = 2, Height = 800,  X = 99, Y = 400)
            Component Render(Shape = "Rectangle", FillColor = "Red")
        }
        
        Entity Lava(){
            Component Physics(MaximumSpeed= 0, Shape = "Rectangle", Friction = 0, 
                Restitution = 0, MovesWhenHit = false, FixedRotation = true)
            Component Transform(Width = 800, Height = 20,  X = 400, Y = 590)
            //TODO remove when I am happy with where it is or replace with Lava.
            Component Render(Shape = "Rectangle", FillColor = "Red")
        }
        
        Entity : Scroller(){
            Component Physics(MaximumSpeed= 0, Shape = "Rectangle", Friction = 0, 
                Restitution = 0, MovesWhenHit = false, FixedRotation = true)
            Component Transform(Width = 800, Height = 20,  X = 400, Y = 570)
            Component Render(Shape = "Rectangle", FillColor = "Black")
        }
		
		Entity : Scroller(){
            Component Physics(MaximumSpeed= 0, Shape = "Rectangle", Friction = 0, 
                Restitution = 0, MovesWhenHit = false, FixedRotation = true)
            Component Transform(Width = 70, Height = 20,  X = 807.8, Y = 547.6, Rotation = -45)
            Component Render(Shape = "Rectangle", FillColor = "Black")
        }
    }
}