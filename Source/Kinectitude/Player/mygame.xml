<?xml version="1.0" encoding="utf-8" ?>
<Game Name="pong" Width="800" Height="600" FirstScene="Main Menu" IsFullScreen="false" xmlns="http://www.kinectitude.com/2012/v1">

  <Using File="Kinectitude.Kinect.dll">
    <Define Name="KinectFollowComponent" Class="Kinectitude.Kinect.KinectFollowComponent"/>
    <Define Name="KinectManager" Class="Kinectitude.Kinect.KinectManager"/>
    <Define Name="GestureEvent" Class="Kinectitude.Kinect.GestureEvent"/>
  </Using>

  <Using File="Kinectitude.Physics.dll">
    <Define Name="PhysicsManager" Class="Kinectitude.Physics.PhysicsManager"/>
    <Define Name="PhysicsComponent" Class="Kinectitude.Physics.PhysicsComponent"/>
    <Define Name="CrossesLineEvent" Class="Kinectitude.Physics.CrossesLineEvent"/>
    <Define Name="CollisionEvent" Class="Kinectitude.Physics.CollisionEvent"/>
  </Using>

  <Using File="Kinectitude.Render.dll">
    <Define Name="RenderManager" Class="Kinectitude.Render.RenderManager"/>
    <Define Name="RenderComponent" Class="Kinectitude.Render.RenderComponent"/>
    <Define Name="TextRenderComponent" Class="Kinectitude.Render.TextRenderComponent"/>
    <Define Name="ImageRenderComponent" Class="Kinectitude.Render.ImageRenderComponent" />
  </Using>

  <Using File="Kinectitude.DirectInput.dll">
    <Define Name="KeyEvent" Class="Kinectitude.DirectInput.KeyEvent"/>
    <Define Name="KeyboardManager" Class="Kinectitude.DirectInput.KeyboardManager"/>
    <Define Name="MouseManager" Class="Kinectitude.DirectInput.MouseManager"/>
    <Define Name="MouseFollowComponent" Class="Kinectitude.DirectInput.MouseFollowComponent"/>
    <Define Name="MouseClickEvent" Class="Kinectitude.DirectInput.MouseClickEvent"/>
  </Using>

  <Prototype Name="ball">
    <Component Type="RenderComponent" FillColor="Red" Shape="Ellipse" />
    <Component Type="TransformComponent" X="400" Y="300" Width="24" Height="24"/>
    <Component Type="PhysicsComponent" MinimumVelocity="30" MaximumVelocity="70" Shape="Ellipse" Restitution="1" Mass="1" Friction="0" MovesWhenHit="true" FixedRotation="true"/>
    
    <Event Type="TriggerOccursEvent" Trigger="create{scene.next}">
      <Action Type="SetAction" Target="id" Value="{scene.next}"/>
      <Action Type="SetAction" Target="right" Value="[random]"/>
      <Action Type="SetAction" Target="top" Value="[random]"/>
      <!--Since the magnitude of the velocity will be too small, the minimum will be used to scale it-->
      <Action Type="SetAction" Target="PhysicsComponent.XVelocity" Value="[random]"/>
      <Action Type="SetAction" Target="PhysicsComponent.YVelocity" Value="[rnd]"/>
      
      <Condition If="right > 0.5">
        <Action Type="SetAction" Target="PhysicsComponent.XVelocity" Value="-PhysicsComponent.XVelocity"/>
      </Condition>

      <Condition If="top > 0.5">
        <Action Type="SetAction" Target="PhysicsComponent.YVelocity" Value="-PhysicsComponent.YVelocity"/>
      </Condition>
      
    </Event>
  </Prototype>

  <Prototype Name="wall">
    <Component Type="TransformComponent" X="400" Y="10" Width="680" Height="20"/>
    <Component Type="PhysicsComponent" Shape="Rectangle" Restitution="0" Friction="0" MovesWhenHit="false" IgnoreCollisionsWith="$wall"/>
    <Component Type="RenderComponent" FillColor="Black" Shape="Rectangle"/>

    <Event Type="CollisionEvent" CollidesWith="$ball">
      <Action Type="FireTriggerAction" Name="decHealth"/>
    </Event>
    
  </Prototype>

  <Prototype Name="sideWall" Prototype="wall">
    <Component Type="TransformComponent" X="10" Y="300" Width="20" Height="480"/>
  </Prototype>

  <Prototype Name="switchWall" Prototype="wall">
    <Component Type="TransformComponent" X="40" Y="10" Width="80" Height="20"/>
    <Component Type="RenderComponent" FillColor="Red"/>
  </Prototype>

  <Prototype Name="basePlayer" health="100" score="0">
    <Component Type="TransformComponent" X="400" Y="560" Width="27" Height="36" />
    <Component Type="ImageRenderComponent" Image="sonic.png" Animated="false" Duration="2" />
    <Component Type="PhysicsComponent" MaximumVelocity="70" Shape="Rectangle" Restitution="1" Friction="0" MovesWhenHit="false" FixedRotation="true"/>

    <Event Type="AttributeChangesEvent" Target="{this.PhysicsComponent.XVelocity}">
      <Action Type="FireTriggerAction" Name="motionChange"/>
    </Event>

    <Event Type="AttributeChangesEvent" Target="{this.PhysicsComponent.YVelocity}">
      <Action Type="FireTriggerAction" Name="motionChange"/>
    </Event>
    
    <Event Type="TriggerOccursEvent" Trigger="motionChange">
      <Condition If="this.PhysicsComponent.XVelocity == 0 and this.PhysicsComponent.YVelocity == 0">
        <Action Type="SetAction" Target="ImageRenderComponent.Animated" Value="false"/>
      </Condition>
      
      <Condition If="this.PhysicsComponent.XVelocity != 0 or this.PhysicsComponent.YVelocity != 0">
        <Action Type="SetAction" Target="ImageRenderComponent.Animated" Value="true"/>
      </Condition>
    </Event>

    <Event Type="TriggerOccursEvent" Trigger="decHealth">
      <Action Type="SetAction" Target="health" Value="[health - 1]"/>
      
      <Condition If="health == 0">
        <Action Type="ChangeSceneAction" Target="Game Over"/>
      </Condition>
    </Event>

    <!--<Event Type="TriggerOccursEvent" Trigger="switch">
      
    </Event>-->
  </Prototype>

  <Prototype Name="mousePlayer" Prototype="basePlayer">
    <Component Type="MouseFollowComponent" Direction="X" MinXFollow="43" MaxXFollow="759" MinYFollow="43" MaxYFollow="559"/>
  </Prototype>

  <Prototype Name="text">
    <Component Type="TextRenderComponent" FontFamily="Arial" FontWeight="Normal" FontStyle="Normal" FontStretch="Normal" FontSize="36" FontColor="White" />
  </Prototype>
  
  <Scene Name="Main Menu">
    <Entity>
      <Event Type="SceneStartsEvent">
        <Action Type="SetAction" Target="game.mouse" Value="true"/>
        <Action Type="ChangeSceneAction" Target="Game"/>
      </Event>
    </Entity>
  </Scene>

  <Scene Name="Game">
    <!--Top, bottom, left, and right walls-->
    <Entity Prototype="wall"/>
    
    <Entity Prototype="wall">
      <Component Type="TransformComponent" Y="590"/>
    </Entity>

    <Entity Prototype="sideWall"/>
    
    <Entity Prototype="sideWall">
      <Component Type="TransformComponent" X="790"/>
    </Entity>
    
    <!--Top, bottom, left and right switch walls-->

    <Entity Prototype="switchWall">
      <Component Type="TransformComponent" X="10" Y="40" Width="20" Height="80"/>
    </Entity>

    <Entity Prototype="switchWall"/>

    <Entity Prototype="switchWall">
      <Component Type="TransformComponent" X="790" Y="40" Width="20" Height="80"/>
    </Entity>

    <Entity Prototype="switchWall">
      <Component Type="TransformComponent" X="760"/>
    </Entity>

    <Entity Prototype="switchWall">
      <Component Type="TransformComponent" Y="590"/>
    </Entity>
    
    <Entity Prototype="switchWall">
      <Component Type="TransformComponent" X="10" Y="560" Width="20" Height="80"/>
    </Entity>

    <Entity Prototype="switchWall">
      <Component Type="TransformComponent" X="790" Y="560" Width="20" Height="80"/>
    </Entity>

    <Entity Prototype="switchWall">
      <Component Type="TransformComponent" X="780" Y="590"/>
    </Entity>

    <!--This entity is used when the scene starts to create the main player-->
    <Entity>
      <Event Type="SceneStartsEvent">
        <Condition If="game.mouse">
          <Action Type="CreateEntityAction" Prototype="mousePlayer"/>
        </Condition>
      </Event>
    </Entity>
    
  </Scene>

  <Scene Name="Game Over">
    
  </Scene>

</Game>
