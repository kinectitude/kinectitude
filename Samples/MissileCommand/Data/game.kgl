using Kinectitude.Render.dll
{
    define RenderService as Kinectitude.Render.RenderService
    define RenderManager as Kinectitude.Render.RenderManager
    define RenderComponent as Kinectitude.Render.RenderComponent
    define ImageRenderComponent as Kinectitude.Render.ImageRenderComponent
    define TextRenderComponent as Kinectitude.Render.TextRenderComponent
}

using Kinectitude.Kinect.dll
{
    define KinectFollowComponent as Kinectitude.Kinect.KinectFollowComponent
}

using Kinectitude.Physics.dll
{
    define PhysicsComponent as Kinectitude.Physics.PhysicsComponent
    define PhysicsManager as Kinectitude.Physics.PhysicsManager
    define CollisionEvent as Kinectitude.Physics.CollisionEvent
}

using Kinectitude.Input.dll
{
    define MouseFollowComponent as Kinectitude.Input.MouseFollowComponent
    define MouseClickEvent as Kinectitude.Input.MouseClickEvent
    define KeyEvent as Kinectitude.Input.KeyEvent
    define MouseManager as Kinectitude.Input.MouseManager
}

Game(Name = "Missile Command", FirstScene = "Gameplay")
{
    Prototype joint()
    {
        Component Transform(Width = 72, Height = 72)
        Component RenderComponent(Shape = "Ellipse", FillColor = "Blue")
        Component KinectFollowComponent(Player = 1)
    }
    
    Prototype explosion()
    {
        Component Transform(Width = 64, Height = 48)
        Component ImageRenderComponent(Image = "explosion.png", Animated = True, Duration = 3, Stretched = False)
        Component PhysicsComponent(Shape = "Ellipse", BodyType = "Static")
        
        Event OnCreate()
        {
            myId = scene.nextExplosionId
            scene.nextExplosionId += 1
            Transform.X = cursor.Transform.X
            Transform.Y = cursor.Transform.Y
            CreateTimer(Name = "explosionTimer" + myId, Duration = 3, Trigger = "destroyExplosion", Recurring = False)
        }

        Event TriggerOccurs(Trigger = "destroyExplosion")
        {
            if (myId < scene.nextExplosionId)
            {
                events.TextRenderComponent.Value = "Explosion"
                Destroy()
            }
        }
    }
    
    Prototype asteroid()
    {
        Component Transform(Width = 64, Height = 64)
        Component ImageRenderComponent(Image = "asteroid.png")
        Component PhysicsComponent(Shape = "Ellipse", Mass = 10, AngularVelocity = 1)
        
        Event OnCreate()
        {
            Transform.X = Random(0, 1280)
            Transform.Y = 100
            PhysicsComponent.YVelocity = 10
        }

        Event CollisionEvent(CollidesWith = $explosion)
        {
            Destroy()
        }
    }
    
    Prototype earthTarget()
    {
        Component Transform()
        Component PhysicsComponent()
        
        Event CollisionEvent(CollidesWith = $asteroid)
        {
            scene.health -= 
        }
    }
    
    Service RenderService(Width = 1280, Height = 720)
    
    Scene Gameplay(health = 1)
    {
        Manager RenderManager(Width = 1280, Height = 720)        
        Manager MouseManager()        
        Manager PhysicsManager()
        
        Entity stars()
        {
            Component Transform(X = 640, Y = 360, Width = 1280, Height = 720)
            Component ImageRenderComponent(Image = "starfield.png")
        }
        
        Entity title()
        {
            Component Transform(X = 640, Y = 120, Width = 278, Height = 150)
            Component ImageRenderComponent(Image = "title.png", Opacity = 0)
        }
        
        Entity cursor()
        {
            Component Transform(X = 308, Y = 192, Width = 48, Height = 48)
            Component ImageRenderComponent(Image = "target.png")
            Component MouseFollowComponent(IgnoresPhysics = True)
            
            Event MouseClickEvent()
            {
                CreateEntity(Prototype = "explosion")
            }
        }
        
        Entity events()
        {
            Component Transform(X = 20, Y = 13)
            Component TextRenderComponent(Value = "Your Text Here", FontSize = 36, FontColor = "White")
            
            Event SceneStarts()
            {
                CreateTimer(Name = "asteroidTimer", Duration = 1, Trigger = "makeAsteroid")
            }

            Event TriggerOccurs(Trigger = "makeAsteroid")
            {
                asteroids += 1
                TextRenderComponent.Value = asteroids
                CreateEntity(Prototype = "asteroid")
            }

            Event KeyEvent(Key = "Escape")
            {
                Quit()
            }
        }
        
        Entity healthBackground()
        {
            Component Transform(X = 640, Y = 32, Width = 600, Height = 32)
            Component RenderComponent(Shape = "Rectangle", FillColor = "DarkGray")
        }
        
        Entity healthCounter()
        {
            Component Transform(X = 640, Y = 32, Width = 600, Height = 32)
            Component RenderComponent(Shape = "Rectangle", FillColor = "Blue")
            
            Event AttributeChanges(Target = scene.health)
            {
                Transform.Width = scene.health * 600
                Transform.X -= 3
            }
        }
        
        Entity : earthTarget()
        {
            Component Transform(X = 640, Y = 615, Width = 1280, Height = 128)
            
            Event CollisionEvent(CollidesWith = $asteroid)
            {
                scene.health -= 0.01
            }
        }
    }
}